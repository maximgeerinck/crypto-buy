# IN PROD: https://docs.docker.com/compose/production/
# https://www.digitalocean.com/community/tutorials/how-to-provision-and-manage-remote-docker-hosts-with-docker-machine-on-ubuntu-16-04

version: "2"
services:
    app:
        volumes:
            - assets:/usr/public
        restart: always
        environment:
            - VIRTUAL_HOST=api.cryptotrackr.com
            - VIRTUAL_PORT=5000
            - LETSENCRYPT_HOST=api.cryptotrackr.com
            - LETSENCRYPT_EMAIL=admin@cryptotrackr.com

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile.prod
        restart: always
        environment:
            - VIRTUAL_HOST=cryptotrackr.com
            - VIRTUAL_PORT=3000
            - LETSENCRYPT_HOST=cryptotrackr.com
            - LETSENCRYPT_EMAIL=admin@cryptotrackr.com
            - NODE_ENV=production

    nginx-proxy:
        image: nginx:alpine
        container_name: nginx-proxy
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - conf:/etc/nginx/conf.d
            - vhost:/etc/nginx/vhost.d
            - html:/usr/share/nginx/html
            - certs:/etc/nginx/certs:ro
        # network_mode: bridge

    docker-gen:
        build: ./nginx-gen
        container_name: nginx-proxy-gen
        # command: -notify-sighup nginx-proxy -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
        volumes_from:
            - nginx-proxy
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
        labels:
            - "com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen"
        # network_mode: bridge

    letsencrypt:
        image: jrcs/letsencrypt-nginx-proxy-companion
        container_name: nginx-proxy-le
        volumes_from:
            - nginx-proxy
        volumes:
            - certs:/etc/nginx/certs:rw
            - /var/run/docker.sock:/var/run/docker.sock:ro
        # network_mode: bridge

volumes:
    assets:
    conf:
    vhost:
    html:
    certs:
