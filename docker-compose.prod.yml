# IN PROD: https://docs.docker.com/compose/production/
# https://www.digitalocean.com/community/tutorials/how-to-provision-and-manage-remote-docker-hosts-with-docker-machine-on-ubuntu-16-04

version: '2'
services:

  app:    
    volumes:
      - assets:/usr/public
    restart: always
    environment:
      - VIRTUAL_HOST=api.cryptotrackr.com
      - VIRTUAL_PORT=5000
      - LETSENCRYPT_HOST=api.cryptotrackr.com
      - LETSENCRYPT_EMAIL=admin@cryptotrackr.com
    # command: ["yarn global add knex","cd src", "knex migrate:latest", "knex seed:run"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    restart: always
    environment:      
      - VIRTUAL_HOST=cryptotrackr.com
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=cryptotrackr.com
      - LETSENCRYPT_EMAIL=admin@cryptotrackr.com
      - NODE_ENV=production

  # nginx-proxy: split up in nginx and docker-gen to prevent docker socket bound to publicly exposed container
  nginx:
    build: ./nginx
    container_name: nginx
    ports: ["80:80", "443:443"]
    volumes:
      - nginx_conf:/etc/nginx/conf.d
      - nginx_hosts:/etc/nginx/vhost.d
      - nginx_certs:/etc/nginx/certs:rw
      - nginx_html:/usr/share/nginx/html

  # docker-gen with the template file
  nginx-gen:
    build: ./nginx-gen
    container_name: nginx-gen
    volumes_from:
      - nginx
    depends_on:
      - app
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"

  # Checks and renews certificates if necessary
  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes_from:
      - nginx
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /tmp/templates:/etc/docker-gen/templates
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen
      # - ACME_CA_URI=https://acme-staging.api.letsencrypt.org/directory

volumes:
  nginx_html:

  nginx_certs:

  nginx_hosts:

  nginx_conf:

  assets: